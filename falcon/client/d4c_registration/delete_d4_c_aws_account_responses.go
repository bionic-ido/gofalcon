// Code generated by go-swagger; DO NOT EDIT.

package d4c_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// DeleteD4CAWSAccountReader is a Reader for the DeleteD4CAWSAccount structure.
type DeleteD4CAWSAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteD4CAWSAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteD4CAWSAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewDeleteD4CAWSAccountMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteD4CAWSAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteD4CAWSAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteD4CAWSAccountTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteD4CAWSAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cloud-connect-aws/entities/account/v2] DeleteD4CAwsAccount", response, response.Code())
	}
}

// NewDeleteD4CAWSAccountOK creates a DeleteD4CAWSAccountOK with default headers values
func NewDeleteD4CAWSAccountOK() *DeleteD4CAWSAccountOK {
	return &DeleteD4CAWSAccountOK{}
}

/*
DeleteD4CAWSAccountOK describes a response with status code 200, with default header values.

OK
*/
type DeleteD4CAWSAccountOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete d4 c Aws account o k response has a 2xx status code
func (o *DeleteD4CAWSAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete d4 c Aws account o k response has a 3xx status code
func (o *DeleteD4CAWSAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account o k response has a 4xx status code
func (o *DeleteD4CAWSAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d4 c Aws account o k response has a 5xx status code
func (o *DeleteD4CAWSAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d4 c Aws account o k response a status code equal to that given
func (o *DeleteD4CAWSAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete d4 c Aws account o k response
func (o *DeleteD4CAWSAccountOK) Code() int {
	return 200
}

func (o *DeleteD4CAWSAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountOK  %+v", 200, o.Payload)
}

func (o *DeleteD4CAWSAccountOK) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountOK  %+v", 200, o.Payload)
}

func (o *DeleteD4CAWSAccountOK) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteD4CAWSAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteD4CAWSAccountMultiStatus creates a DeleteD4CAWSAccountMultiStatus with default headers values
func NewDeleteD4CAWSAccountMultiStatus() *DeleteD4CAWSAccountMultiStatus {
	return &DeleteD4CAWSAccountMultiStatus{}
}

/*
DeleteD4CAWSAccountMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type DeleteD4CAWSAccountMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete d4 c Aws account multi status response has a 2xx status code
func (o *DeleteD4CAWSAccountMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete d4 c Aws account multi status response has a 3xx status code
func (o *DeleteD4CAWSAccountMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account multi status response has a 4xx status code
func (o *DeleteD4CAWSAccountMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d4 c Aws account multi status response has a 5xx status code
func (o *DeleteD4CAWSAccountMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d4 c Aws account multi status response a status code equal to that given
func (o *DeleteD4CAWSAccountMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the delete d4 c Aws account multi status response
func (o *DeleteD4CAWSAccountMultiStatus) Code() int {
	return 207
}

func (o *DeleteD4CAWSAccountMultiStatus) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *DeleteD4CAWSAccountMultiStatus) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *DeleteD4CAWSAccountMultiStatus) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteD4CAWSAccountMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteD4CAWSAccountBadRequest creates a DeleteD4CAWSAccountBadRequest with default headers values
func NewDeleteD4CAWSAccountBadRequest() *DeleteD4CAWSAccountBadRequest {
	return &DeleteD4CAWSAccountBadRequest{}
}

/*
DeleteD4CAWSAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteD4CAWSAccountBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete d4 c Aws account bad request response has a 2xx status code
func (o *DeleteD4CAWSAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d4 c Aws account bad request response has a 3xx status code
func (o *DeleteD4CAWSAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account bad request response has a 4xx status code
func (o *DeleteD4CAWSAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d4 c Aws account bad request response has a 5xx status code
func (o *DeleteD4CAWSAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d4 c Aws account bad request response a status code equal to that given
func (o *DeleteD4CAWSAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete d4 c Aws account bad request response
func (o *DeleteD4CAWSAccountBadRequest) Code() int {
	return 400
}

func (o *DeleteD4CAWSAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteD4CAWSAccountBadRequest) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteD4CAWSAccountBadRequest) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteD4CAWSAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteD4CAWSAccountForbidden creates a DeleteD4CAWSAccountForbidden with default headers values
func NewDeleteD4CAWSAccountForbidden() *DeleteD4CAWSAccountForbidden {
	return &DeleteD4CAWSAccountForbidden{}
}

/*
DeleteD4CAWSAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteD4CAWSAccountForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this delete d4 c Aws account forbidden response has a 2xx status code
func (o *DeleteD4CAWSAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d4 c Aws account forbidden response has a 3xx status code
func (o *DeleteD4CAWSAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account forbidden response has a 4xx status code
func (o *DeleteD4CAWSAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d4 c Aws account forbidden response has a 5xx status code
func (o *DeleteD4CAWSAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d4 c Aws account forbidden response a status code equal to that given
func (o *DeleteD4CAWSAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete d4 c Aws account forbidden response
func (o *DeleteD4CAWSAccountForbidden) Code() int {
	return 403
}

func (o *DeleteD4CAWSAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *DeleteD4CAWSAccountForbidden) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *DeleteD4CAWSAccountForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *DeleteD4CAWSAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteD4CAWSAccountTooManyRequests creates a DeleteD4CAWSAccountTooManyRequests with default headers values
func NewDeleteD4CAWSAccountTooManyRequests() *DeleteD4CAWSAccountTooManyRequests {
	return &DeleteD4CAWSAccountTooManyRequests{}
}

/*
DeleteD4CAWSAccountTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type DeleteD4CAWSAccountTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this delete d4 c Aws account too many requests response has a 2xx status code
func (o *DeleteD4CAWSAccountTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d4 c Aws account too many requests response has a 3xx status code
func (o *DeleteD4CAWSAccountTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account too many requests response has a 4xx status code
func (o *DeleteD4CAWSAccountTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d4 c Aws account too many requests response has a 5xx status code
func (o *DeleteD4CAWSAccountTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d4 c Aws account too many requests response a status code equal to that given
func (o *DeleteD4CAWSAccountTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete d4 c Aws account too many requests response
func (o *DeleteD4CAWSAccountTooManyRequests) Code() int {
	return 429
}

func (o *DeleteD4CAWSAccountTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteD4CAWSAccountTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteD4CAWSAccountTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *DeleteD4CAWSAccountTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteD4CAWSAccountInternalServerError creates a DeleteD4CAWSAccountInternalServerError with default headers values
func NewDeleteD4CAWSAccountInternalServerError() *DeleteD4CAWSAccountInternalServerError {
	return &DeleteD4CAWSAccountInternalServerError{}
}

/*
DeleteD4CAWSAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteD4CAWSAccountInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete d4 c Aws account internal server error response has a 2xx status code
func (o *DeleteD4CAWSAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d4 c Aws account internal server error response has a 3xx status code
func (o *DeleteD4CAWSAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d4 c Aws account internal server error response has a 4xx status code
func (o *DeleteD4CAWSAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d4 c Aws account internal server error response has a 5xx status code
func (o *DeleteD4CAWSAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete d4 c Aws account internal server error response a status code equal to that given
func (o *DeleteD4CAWSAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete d4 c Aws account internal server error response
func (o *DeleteD4CAWSAccountInternalServerError) Code() int {
	return 500
}

func (o *DeleteD4CAWSAccountInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteD4CAWSAccountInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-aws/entities/account/v2][%d] deleteD4CAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteD4CAWSAccountInternalServerError) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteD4CAWSAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
