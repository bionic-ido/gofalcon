// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// DeleteCSPMAWSAccountReader is a Reader for the DeleteCSPMAWSAccount structure.
type DeleteCSPMAWSAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCSPMAWSAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCSPMAWSAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewDeleteCSPMAWSAccountMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCSPMAWSAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCSPMAWSAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteCSPMAWSAccountTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCSPMAWSAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cloud-connect-cspm-aws/entities/account/v1] DeleteCSPMAwsAccount", response, response.Code())
	}
}

// NewDeleteCSPMAWSAccountOK creates a DeleteCSPMAWSAccountOK with default headers values
func NewDeleteCSPMAWSAccountOK() *DeleteCSPMAWSAccountOK {
	return &DeleteCSPMAWSAccountOK{}
}

/*
DeleteCSPMAWSAccountOK describes a response with status code 200, with default header values.

OK
*/
type DeleteCSPMAWSAccountOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete Cspm Aws account o k response has a 2xx status code
func (o *DeleteCSPMAWSAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Cspm Aws account o k response has a 3xx status code
func (o *DeleteCSPMAWSAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account o k response has a 4xx status code
func (o *DeleteCSPMAWSAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Cspm Aws account o k response has a 5xx status code
func (o *DeleteCSPMAWSAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Cspm Aws account o k response a status code equal to that given
func (o *DeleteCSPMAWSAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete Cspm Aws account o k response
func (o *DeleteCSPMAWSAccountOK) Code() int {
	return 200
}

func (o *DeleteCSPMAWSAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountOK  %+v", 200, o.Payload)
}

func (o *DeleteCSPMAWSAccountOK) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountOK  %+v", 200, o.Payload)
}

func (o *DeleteCSPMAWSAccountOK) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCSPMAWSAccountMultiStatus creates a DeleteCSPMAWSAccountMultiStatus with default headers values
func NewDeleteCSPMAWSAccountMultiStatus() *DeleteCSPMAWSAccountMultiStatus {
	return &DeleteCSPMAWSAccountMultiStatus{}
}

/*
DeleteCSPMAWSAccountMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type DeleteCSPMAWSAccountMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete Cspm Aws account multi status response has a 2xx status code
func (o *DeleteCSPMAWSAccountMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Cspm Aws account multi status response has a 3xx status code
func (o *DeleteCSPMAWSAccountMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account multi status response has a 4xx status code
func (o *DeleteCSPMAWSAccountMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Cspm Aws account multi status response has a 5xx status code
func (o *DeleteCSPMAWSAccountMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Cspm Aws account multi status response a status code equal to that given
func (o *DeleteCSPMAWSAccountMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the delete Cspm Aws account multi status response
func (o *DeleteCSPMAWSAccountMultiStatus) Code() int {
	return 207
}

func (o *DeleteCSPMAWSAccountMultiStatus) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *DeleteCSPMAWSAccountMultiStatus) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *DeleteCSPMAWSAccountMultiStatus) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCSPMAWSAccountBadRequest creates a DeleteCSPMAWSAccountBadRequest with default headers values
func NewDeleteCSPMAWSAccountBadRequest() *DeleteCSPMAWSAccountBadRequest {
	return &DeleteCSPMAWSAccountBadRequest{}
}

/*
DeleteCSPMAWSAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteCSPMAWSAccountBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete Cspm Aws account bad request response has a 2xx status code
func (o *DeleteCSPMAWSAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Cspm Aws account bad request response has a 3xx status code
func (o *DeleteCSPMAWSAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account bad request response has a 4xx status code
func (o *DeleteCSPMAWSAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Cspm Aws account bad request response has a 5xx status code
func (o *DeleteCSPMAWSAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Cspm Aws account bad request response a status code equal to that given
func (o *DeleteCSPMAWSAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete Cspm Aws account bad request response
func (o *DeleteCSPMAWSAccountBadRequest) Code() int {
	return 400
}

func (o *DeleteCSPMAWSAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCSPMAWSAccountBadRequest) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCSPMAWSAccountBadRequest) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCSPMAWSAccountForbidden creates a DeleteCSPMAWSAccountForbidden with default headers values
func NewDeleteCSPMAWSAccountForbidden() *DeleteCSPMAWSAccountForbidden {
	return &DeleteCSPMAWSAccountForbidden{}
}

/*
DeleteCSPMAWSAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteCSPMAWSAccountForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this delete Cspm Aws account forbidden response has a 2xx status code
func (o *DeleteCSPMAWSAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Cspm Aws account forbidden response has a 3xx status code
func (o *DeleteCSPMAWSAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account forbidden response has a 4xx status code
func (o *DeleteCSPMAWSAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Cspm Aws account forbidden response has a 5xx status code
func (o *DeleteCSPMAWSAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Cspm Aws account forbidden response a status code equal to that given
func (o *DeleteCSPMAWSAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete Cspm Aws account forbidden response
func (o *DeleteCSPMAWSAccountForbidden) Code() int {
	return 403
}

func (o *DeleteCSPMAWSAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCSPMAWSAccountForbidden) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCSPMAWSAccountForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCSPMAWSAccountTooManyRequests creates a DeleteCSPMAWSAccountTooManyRequests with default headers values
func NewDeleteCSPMAWSAccountTooManyRequests() *DeleteCSPMAWSAccountTooManyRequests {
	return &DeleteCSPMAWSAccountTooManyRequests{}
}

/*
DeleteCSPMAWSAccountTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type DeleteCSPMAWSAccountTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this delete Cspm Aws account too many requests response has a 2xx status code
func (o *DeleteCSPMAWSAccountTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Cspm Aws account too many requests response has a 3xx status code
func (o *DeleteCSPMAWSAccountTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account too many requests response has a 4xx status code
func (o *DeleteCSPMAWSAccountTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Cspm Aws account too many requests response has a 5xx status code
func (o *DeleteCSPMAWSAccountTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Cspm Aws account too many requests response a status code equal to that given
func (o *DeleteCSPMAWSAccountTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete Cspm Aws account too many requests response
func (o *DeleteCSPMAWSAccountTooManyRequests) Code() int {
	return 429
}

func (o *DeleteCSPMAWSAccountTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteCSPMAWSAccountTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteCSPMAWSAccountTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCSPMAWSAccountInternalServerError creates a DeleteCSPMAWSAccountInternalServerError with default headers values
func NewDeleteCSPMAWSAccountInternalServerError() *DeleteCSPMAWSAccountInternalServerError {
	return &DeleteCSPMAWSAccountInternalServerError{}
}

/*
DeleteCSPMAWSAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteCSPMAWSAccountInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaBaseEntitiesResponse
}

// IsSuccess returns true when this delete Cspm Aws account internal server error response has a 2xx status code
func (o *DeleteCSPMAWSAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Cspm Aws account internal server error response has a 3xx status code
func (o *DeleteCSPMAWSAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Cspm Aws account internal server error response has a 4xx status code
func (o *DeleteCSPMAWSAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Cspm Aws account internal server error response has a 5xx status code
func (o *DeleteCSPMAWSAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete Cspm Aws account internal server error response a status code equal to that given
func (o *DeleteCSPMAWSAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete Cspm Aws account internal server error response
func (o *DeleteCSPMAWSAccountInternalServerError) Code() int {
	return 500
}

func (o *DeleteCSPMAWSAccountInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCSPMAWSAccountInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /cloud-connect-cspm-aws/entities/account/v1][%d] deleteCspmAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCSPMAWSAccountInternalServerError) GetPayload() *models.MsaBaseEntitiesResponse {
	return o.Payload
}

func (o *DeleteCSPMAWSAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaBaseEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
