// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CreateCSPMAWSAccountReader is a Reader for the CreateCSPMAWSAccount structure.
type CreateCSPMAWSAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCSPMAWSAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateCSPMAWSAccountCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewCreateCSPMAWSAccountMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCSPMAWSAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCSPMAWSAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateCSPMAWSAccountTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCSPMAWSAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-connect-cspm-aws/entities/account/v1] CreateCSPMAwsAccount", response, response.Code())
	}
}

// NewCreateCSPMAWSAccountCreated creates a CreateCSPMAWSAccountCreated with default headers values
func NewCreateCSPMAWSAccountCreated() *CreateCSPMAWSAccountCreated {
	return &CreateCSPMAWSAccountCreated{}
}

/*
CreateCSPMAWSAccountCreated describes a response with status code 201, with default header values.

Created
*/
type CreateCSPMAWSAccountCreated struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAWSAccountResponseV2
}

// IsSuccess returns true when this create Cspm Aws account created response has a 2xx status code
func (o *CreateCSPMAWSAccountCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Cspm Aws account created response has a 3xx status code
func (o *CreateCSPMAWSAccountCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account created response has a 4xx status code
func (o *CreateCSPMAWSAccountCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Cspm Aws account created response has a 5xx status code
func (o *CreateCSPMAWSAccountCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create Cspm Aws account created response a status code equal to that given
func (o *CreateCSPMAWSAccountCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create Cspm Aws account created response
func (o *CreateCSPMAWSAccountCreated) Code() int {
	return 201
}

func (o *CreateCSPMAWSAccountCreated) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountCreated  %+v", 201, o.Payload)
}

func (o *CreateCSPMAWSAccountCreated) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountCreated  %+v", 201, o.Payload)
}

func (o *CreateCSPMAWSAccountCreated) GetPayload() *models.RegistrationAWSAccountResponseV2 {
	return o.Payload
}

func (o *CreateCSPMAWSAccountCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAWSAccountResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCSPMAWSAccountMultiStatus creates a CreateCSPMAWSAccountMultiStatus with default headers values
func NewCreateCSPMAWSAccountMultiStatus() *CreateCSPMAWSAccountMultiStatus {
	return &CreateCSPMAWSAccountMultiStatus{}
}

/*
CreateCSPMAWSAccountMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type CreateCSPMAWSAccountMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAWSAccountResponseV2
}

// IsSuccess returns true when this create Cspm Aws account multi status response has a 2xx status code
func (o *CreateCSPMAWSAccountMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Cspm Aws account multi status response has a 3xx status code
func (o *CreateCSPMAWSAccountMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account multi status response has a 4xx status code
func (o *CreateCSPMAWSAccountMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Cspm Aws account multi status response has a 5xx status code
func (o *CreateCSPMAWSAccountMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this create Cspm Aws account multi status response a status code equal to that given
func (o *CreateCSPMAWSAccountMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the create Cspm Aws account multi status response
func (o *CreateCSPMAWSAccountMultiStatus) Code() int {
	return 207
}

func (o *CreateCSPMAWSAccountMultiStatus) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *CreateCSPMAWSAccountMultiStatus) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *CreateCSPMAWSAccountMultiStatus) GetPayload() *models.RegistrationAWSAccountResponseV2 {
	return o.Payload
}

func (o *CreateCSPMAWSAccountMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAWSAccountResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCSPMAWSAccountBadRequest creates a CreateCSPMAWSAccountBadRequest with default headers values
func NewCreateCSPMAWSAccountBadRequest() *CreateCSPMAWSAccountBadRequest {
	return &CreateCSPMAWSAccountBadRequest{}
}

/*
CreateCSPMAWSAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateCSPMAWSAccountBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAWSAccountResponseV2
}

// IsSuccess returns true when this create Cspm Aws account bad request response has a 2xx status code
func (o *CreateCSPMAWSAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Cspm Aws account bad request response has a 3xx status code
func (o *CreateCSPMAWSAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account bad request response has a 4xx status code
func (o *CreateCSPMAWSAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Cspm Aws account bad request response has a 5xx status code
func (o *CreateCSPMAWSAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Cspm Aws account bad request response a status code equal to that given
func (o *CreateCSPMAWSAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create Cspm Aws account bad request response
func (o *CreateCSPMAWSAccountBadRequest) Code() int {
	return 400
}

func (o *CreateCSPMAWSAccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCSPMAWSAccountBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCSPMAWSAccountBadRequest) GetPayload() *models.RegistrationAWSAccountResponseV2 {
	return o.Payload
}

func (o *CreateCSPMAWSAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAWSAccountResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCSPMAWSAccountForbidden creates a CreateCSPMAWSAccountForbidden with default headers values
func NewCreateCSPMAWSAccountForbidden() *CreateCSPMAWSAccountForbidden {
	return &CreateCSPMAWSAccountForbidden{}
}

/*
CreateCSPMAWSAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateCSPMAWSAccountForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this create Cspm Aws account forbidden response has a 2xx status code
func (o *CreateCSPMAWSAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Cspm Aws account forbidden response has a 3xx status code
func (o *CreateCSPMAWSAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account forbidden response has a 4xx status code
func (o *CreateCSPMAWSAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Cspm Aws account forbidden response has a 5xx status code
func (o *CreateCSPMAWSAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create Cspm Aws account forbidden response a status code equal to that given
func (o *CreateCSPMAWSAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create Cspm Aws account forbidden response
func (o *CreateCSPMAWSAccountForbidden) Code() int {
	return 403
}

func (o *CreateCSPMAWSAccountForbidden) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *CreateCSPMAWSAccountForbidden) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountForbidden  %+v", 403, o.Payload)
}

func (o *CreateCSPMAWSAccountForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CreateCSPMAWSAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCSPMAWSAccountTooManyRequests creates a CreateCSPMAWSAccountTooManyRequests with default headers values
func NewCreateCSPMAWSAccountTooManyRequests() *CreateCSPMAWSAccountTooManyRequests {
	return &CreateCSPMAWSAccountTooManyRequests{}
}

/*
CreateCSPMAWSAccountTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CreateCSPMAWSAccountTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this create Cspm Aws account too many requests response has a 2xx status code
func (o *CreateCSPMAWSAccountTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Cspm Aws account too many requests response has a 3xx status code
func (o *CreateCSPMAWSAccountTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account too many requests response has a 4xx status code
func (o *CreateCSPMAWSAccountTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Cspm Aws account too many requests response has a 5xx status code
func (o *CreateCSPMAWSAccountTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create Cspm Aws account too many requests response a status code equal to that given
func (o *CreateCSPMAWSAccountTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create Cspm Aws account too many requests response
func (o *CreateCSPMAWSAccountTooManyRequests) Code() int {
	return 429
}

func (o *CreateCSPMAWSAccountTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateCSPMAWSAccountTooManyRequests) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateCSPMAWSAccountTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CreateCSPMAWSAccountTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCSPMAWSAccountInternalServerError creates a CreateCSPMAWSAccountInternalServerError with default headers values
func NewCreateCSPMAWSAccountInternalServerError() *CreateCSPMAWSAccountInternalServerError {
	return &CreateCSPMAWSAccountInternalServerError{}
}

/*
CreateCSPMAWSAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateCSPMAWSAccountInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAWSAccountResponseV2
}

// IsSuccess returns true when this create Cspm Aws account internal server error response has a 2xx status code
func (o *CreateCSPMAWSAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Cspm Aws account internal server error response has a 3xx status code
func (o *CreateCSPMAWSAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Cspm Aws account internal server error response has a 4xx status code
func (o *CreateCSPMAWSAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Cspm Aws account internal server error response has a 5xx status code
func (o *CreateCSPMAWSAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create Cspm Aws account internal server error response a status code equal to that given
func (o *CreateCSPMAWSAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create Cspm Aws account internal server error response
func (o *CreateCSPMAWSAccountInternalServerError) Code() int {
	return 500
}

func (o *CreateCSPMAWSAccountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCSPMAWSAccountInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-aws/entities/account/v1][%d] createCspmAwsAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCSPMAWSAccountInternalServerError) GetPayload() *models.RegistrationAWSAccountResponseV2 {
	return o.Payload
}

func (o *CreateCSPMAWSAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAWSAccountResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
