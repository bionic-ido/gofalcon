// Code generated by go-swagger; DO NOT EDIT.

package mssp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCIDGroupByIDParams creates a new GetCIDGroupByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCIDGroupByIDParams() *GetCIDGroupByIDParams {
	return &GetCIDGroupByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCIDGroupByIDParamsWithTimeout creates a new GetCIDGroupByIDParams object
// with the ability to set a timeout on a request.
func NewGetCIDGroupByIDParamsWithTimeout(timeout time.Duration) *GetCIDGroupByIDParams {
	return &GetCIDGroupByIDParams{
		timeout: timeout,
	}
}

// NewGetCIDGroupByIDParamsWithContext creates a new GetCIDGroupByIDParams object
// with the ability to set a context for a request.
func NewGetCIDGroupByIDParamsWithContext(ctx context.Context) *GetCIDGroupByIDParams {
	return &GetCIDGroupByIDParams{
		Context: ctx,
	}
}

// NewGetCIDGroupByIDParamsWithHTTPClient creates a new GetCIDGroupByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCIDGroupByIDParamsWithHTTPClient(client *http.Client) *GetCIDGroupByIDParams {
	return &GetCIDGroupByIDParams{
		HTTPClient: client,
	}
}

/*
GetCIDGroupByIDParams contains all the parameters to send to the API endpoint

	for the get CID group by Id operation.

	Typically these are written to a http.Request.
*/
type GetCIDGroupByIDParams struct {

	/* CIDGroupIds.

	   CID group IDs to be searched on
	*/
	CIDGroupIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get CID group by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCIDGroupByIDParams) WithDefaults() *GetCIDGroupByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get CID group by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCIDGroupByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get CID group by Id params
func (o *GetCIDGroupByIDParams) WithTimeout(timeout time.Duration) *GetCIDGroupByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get CID group by Id params
func (o *GetCIDGroupByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get CID group by Id params
func (o *GetCIDGroupByIDParams) WithContext(ctx context.Context) *GetCIDGroupByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get CID group by Id params
func (o *GetCIDGroupByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get CID group by Id params
func (o *GetCIDGroupByIDParams) WithHTTPClient(client *http.Client) *GetCIDGroupByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get CID group by Id params
func (o *GetCIDGroupByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCIDGroupIds adds the cIDGroupIds to the get CID group by Id params
func (o *GetCIDGroupByIDParams) WithCIDGroupIds(cIDGroupIds []string) *GetCIDGroupByIDParams {
	o.SetCIDGroupIds(cIDGroupIds)
	return o
}

// SetCIDGroupIds adds the cidGroupIds to the get CID group by Id params
func (o *GetCIDGroupByIDParams) SetCIDGroupIds(cIDGroupIds []string) {
	o.CIDGroupIds = cIDGroupIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetCIDGroupByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CIDGroupIds != nil {

		// binding items for cid_group_ids
		joinedCIDGroupIds := o.bindParamCIDGroupIds(reg)

		// query array param cid_group_ids
		if err := r.SetQueryParam("cid_group_ids", joinedCIDGroupIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetCIDGroupByID binds the parameter cid_group_ids
func (o *GetCIDGroupByIDParams) bindParamCIDGroupIds(formats strfmt.Registry) []string {
	cIDGroupIdsIR := o.CIDGroupIds

	var cIDGroupIdsIC []string
	for _, cIDGroupIdsIIR := range cIDGroupIdsIR { // explode []string

		cIDGroupIdsIIV := cIDGroupIdsIIR // string as string
		cIDGroupIdsIC = append(cIDGroupIdsIC, cIDGroupIdsIIV)
	}

	// items.CollectionFormat: "multi"
	cIDGroupIdsIS := swag.JoinByFormat(cIDGroupIdsIC, "multi")

	return cIDGroupIdsIS
}
