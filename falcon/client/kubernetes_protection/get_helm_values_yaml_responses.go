// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_protection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetHelmValuesYAMLReader is a Reader for the GetHelmValuesYAML structure.
type GetHelmValuesYAMLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHelmValuesYAMLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHelmValuesYAMLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHelmValuesYAMLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHelmValuesYAMLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetHelmValuesYAMLTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHelmValuesYAMLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kubernetes-protection/entities/integration/agent/v1] GetHelmValuesYaml", response, response.Code())
	}
}

// NewGetHelmValuesYAMLOK creates a GetHelmValuesYAMLOK with default headers values
func NewGetHelmValuesYAMLOK() *GetHelmValuesYAMLOK {
	return &GetHelmValuesYAMLOK{}
}

/*
GetHelmValuesYAMLOK describes a response with status code 200, with default header values.

OK
*/
type GetHelmValuesYAMLOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload models.K8sregHelmYAMLResp
}

// IsSuccess returns true when this get helm values Yaml o k response has a 2xx status code
func (o *GetHelmValuesYAMLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get helm values Yaml o k response has a 3xx status code
func (o *GetHelmValuesYAMLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm values Yaml o k response has a 4xx status code
func (o *GetHelmValuesYAMLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get helm values Yaml o k response has a 5xx status code
func (o *GetHelmValuesYAMLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm values Yaml o k response a status code equal to that given
func (o *GetHelmValuesYAMLOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get helm values Yaml o k response
func (o *GetHelmValuesYAMLOK) Code() int {
	return 200
}

func (o *GetHelmValuesYAMLOK) Error() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlOK  %+v", 200, o.Payload)
}

func (o *GetHelmValuesYAMLOK) String() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlOK  %+v", 200, o.Payload)
}

func (o *GetHelmValuesYAMLOK) GetPayload() models.K8sregHelmYAMLResp {
	return o.Payload
}

func (o *GetHelmValuesYAMLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmValuesYAMLBadRequest creates a GetHelmValuesYAMLBadRequest with default headers values
func NewGetHelmValuesYAMLBadRequest() *GetHelmValuesYAMLBadRequest {
	return &GetHelmValuesYAMLBadRequest{}
}

/*
GetHelmValuesYAMLBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHelmValuesYAMLBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get helm values Yaml bad request response has a 2xx status code
func (o *GetHelmValuesYAMLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm values Yaml bad request response has a 3xx status code
func (o *GetHelmValuesYAMLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm values Yaml bad request response has a 4xx status code
func (o *GetHelmValuesYAMLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get helm values Yaml bad request response has a 5xx status code
func (o *GetHelmValuesYAMLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm values Yaml bad request response a status code equal to that given
func (o *GetHelmValuesYAMLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get helm values Yaml bad request response
func (o *GetHelmValuesYAMLBadRequest) Code() int {
	return 400
}

func (o *GetHelmValuesYAMLBadRequest) Error() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlBadRequest  %+v", 400, o.Payload)
}

func (o *GetHelmValuesYAMLBadRequest) String() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlBadRequest  %+v", 400, o.Payload)
}

func (o *GetHelmValuesYAMLBadRequest) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetHelmValuesYAMLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmValuesYAMLForbidden creates a GetHelmValuesYAMLForbidden with default headers values
func NewGetHelmValuesYAMLForbidden() *GetHelmValuesYAMLForbidden {
	return &GetHelmValuesYAMLForbidden{}
}

/*
GetHelmValuesYAMLForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetHelmValuesYAMLForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get helm values Yaml forbidden response has a 2xx status code
func (o *GetHelmValuesYAMLForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm values Yaml forbidden response has a 3xx status code
func (o *GetHelmValuesYAMLForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm values Yaml forbidden response has a 4xx status code
func (o *GetHelmValuesYAMLForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get helm values Yaml forbidden response has a 5xx status code
func (o *GetHelmValuesYAMLForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm values Yaml forbidden response a status code equal to that given
func (o *GetHelmValuesYAMLForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get helm values Yaml forbidden response
func (o *GetHelmValuesYAMLForbidden) Code() int {
	return 403
}

func (o *GetHelmValuesYAMLForbidden) Error() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlForbidden  %+v", 403, o.Payload)
}

func (o *GetHelmValuesYAMLForbidden) String() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlForbidden  %+v", 403, o.Payload)
}

func (o *GetHelmValuesYAMLForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetHelmValuesYAMLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmValuesYAMLTooManyRequests creates a GetHelmValuesYAMLTooManyRequests with default headers values
func NewGetHelmValuesYAMLTooManyRequests() *GetHelmValuesYAMLTooManyRequests {
	return &GetHelmValuesYAMLTooManyRequests{}
}

/*
GetHelmValuesYAMLTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetHelmValuesYAMLTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get helm values Yaml too many requests response has a 2xx status code
func (o *GetHelmValuesYAMLTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm values Yaml too many requests response has a 3xx status code
func (o *GetHelmValuesYAMLTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm values Yaml too many requests response has a 4xx status code
func (o *GetHelmValuesYAMLTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get helm values Yaml too many requests response has a 5xx status code
func (o *GetHelmValuesYAMLTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm values Yaml too many requests response a status code equal to that given
func (o *GetHelmValuesYAMLTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get helm values Yaml too many requests response
func (o *GetHelmValuesYAMLTooManyRequests) Code() int {
	return 429
}

func (o *GetHelmValuesYAMLTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetHelmValuesYAMLTooManyRequests) String() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetHelmValuesYAMLTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetHelmValuesYAMLTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmValuesYAMLInternalServerError creates a GetHelmValuesYAMLInternalServerError with default headers values
func NewGetHelmValuesYAMLInternalServerError() *GetHelmValuesYAMLInternalServerError {
	return &GetHelmValuesYAMLInternalServerError{}
}

/*
GetHelmValuesYAMLInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetHelmValuesYAMLInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get helm values Yaml internal server error response has a 2xx status code
func (o *GetHelmValuesYAMLInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm values Yaml internal server error response has a 3xx status code
func (o *GetHelmValuesYAMLInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm values Yaml internal server error response has a 4xx status code
func (o *GetHelmValuesYAMLInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get helm values Yaml internal server error response has a 5xx status code
func (o *GetHelmValuesYAMLInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get helm values Yaml internal server error response a status code equal to that given
func (o *GetHelmValuesYAMLInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get helm values Yaml internal server error response
func (o *GetHelmValuesYAMLInternalServerError) Code() int {
	return 500
}

func (o *GetHelmValuesYAMLInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHelmValuesYAMLInternalServerError) String() string {
	return fmt.Sprintf("[GET /kubernetes-protection/entities/integration/agent/v1][%d] getHelmValuesYamlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHelmValuesYAMLInternalServerError) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetHelmValuesYAMLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
